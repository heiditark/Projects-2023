[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\heidi\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\heidi\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Foundation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 335.6015ms
[debug]       Load.loadUnit: defsScala took 0.7338ms
[debug] [Loading] Scanning directory C:\Users\heidi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\heidi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 41.0122 ms
[debug]           Load.resolveProject(global-plugins) took 107.1494ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\heidi\.sbt\1.0\plugins, plugins: List(<none>))) took 235.5095ms
[debug] [Loading] Done in C:\Users\heidi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 310.5498ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4947ms
[debug]     Load.loadUnit(file:/C:/Users/heidi/.sbt/1.0/plugins/, ...) took 682.4674ms
[debug]   Load.apply: load took 1104.861ms
[debug]   Load.apply: resolveProjects took 14.0943ms
[debug]   Load.apply: finalTransforms took 135.2542ms
[debug]   Load.apply: config.delegates took 30.2708ms
[debug]   Load.apply: Def.make(settings)... took 1232.7593ms
[debug]   Load.apply: structureIndex took 298.1031ms
[debug]   Load.apply: mkStreams took 5.3507ms
[info] loading global plugins from C:\Users\heidi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 25185.8416ms
[debug]           Load.loadUnit: plugins took 116.6161ms
[debug]           Load.loadUnit: defsScala took 0.0431ms
[debug] [Loading] Scanning directory C:\Users\heidi\IdeaProjects\Numerical data visualization 2\project
[debug]             Load.loadUnit: mkEval took 21.8161ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\heidi\IdeaProjects\Numerical data visualization 2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.7876 ms
[info] loading settings for project numerical-data-visualization-2-build from idea.sbt ...
[debug]               Load.resolveProject(numerical-data-visualization-2-build) took 114.5099ms
[debug]             Load.loadTransitive: finalizeProject(Project(id numerical-data-visualization-2-build, base: C:\Users\heidi\IdeaProjects\Numerical data visualization 2\project, plugins: List(<none>))) took 120.5843ms
[debug] [Loading] Done in C:\Users\heidi\IdeaProjects\Numerical data visualization 2\project, returning: (numerical-data-visualization-2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1369.6994ms
[debug]           Load.loadUnit: cleanEvalClasses took 34.4355ms
[debug]         Load.loadUnit(file:/C:/Users/heidi/IdeaProjects/Numerical%20data%20visualization%202/project/, ...) took 1530.0464ms
[debug]       Load.apply: load took 1535.8649ms
[debug]       Load.apply: resolveProjects took 0.2808ms
[debug]       Load.apply: finalTransforms took 118.0565ms
[debug]       Load.apply: config.delegates took 0.6083ms
[debug]       Load.apply: Def.make(settings)... took 949.6131ms
[debug]       Load.apply: structureIndex took 75.9119ms
[debug]       Load.apply: mkStreams took 0.0062ms
[info] loading project definition from C:\Users\heidi\IdeaProjects\Numerical data visualization 2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 13183.1861ms
[debug]     Load.loadUnit: defsScala took 0.0067ms
[debug] [Loading] Scanning directory C:\Users\heidi\IdeaProjects\Numerical data visualization 2
[debug]       Load.loadUnit: mkEval took 11.3859ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\heidi\IdeaProjects\Numerical data visualization 2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 7.1384 ms
[info] loading settings for project numerical-data-visualization-2 from build.sbt ...
[debug]         Load.resolveProject(numerical-data-visualization-2) took 189.6241ms
[debug]       Load.loadTransitive: finalizeProject(Project(id numerical-data-visualization-2, base: C:\Users\heidi\IdeaProjects\Numerical data visualization 2, plugins: List(<none>))) took 199.6406ms
[debug] [Loading] Done in C:\Users\heidi\IdeaProjects\Numerical data visualization 2, returning: (numerical-data-visualization-2)
[debug]     Load.loadUnit: loadedProjectsRaw took 1303.4664ms
[debug]     Load.loadUnit: cleanEvalClasses took 65.3694ms
[debug]   Load.loadUnit(file:/C:/Users/heidi/IdeaProjects/Numerical%20data%20visualization%202/, ...) took 14553.4911ms
[debug] Load.apply: load took 14556.6804ms
[debug] Load.apply: resolveProjects took 0.2217ms
[debug] Load.apply: finalTransforms took 74.5801ms
[debug] Load.apply: config.delegates took 0.7933ms
[debug] Load.apply: Def.make(settings)... took 745.0781ms
[debug] Load.apply: structureIndex took 258.3263ms
[debug] Load.apply: mkStreams took 0.0047ms
[info] set current project to Numerical data visualization 2 (in build file:/C:/Users/heidi/IdeaProjects/Numerical%20data%20visualization%202/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58389 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58389, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Numerical data visualization 2 (in build file:/C:/Users/heidi/IdeaProjects/Numerical%20data%20visualization%202/)
[debug] > Exec(idea-shell, None, None)
